===================================================
module defines a matrix multiplication function
====================================================

import function:
    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Test 1:
    >>> a = [
    ... [1, 2],
    ... [3, 4],
    ... ]
    >>> b = a
    >>> print(lazy_matrix_mul(a, b))
    [[ 7 10]
     [15 22]]

Test 2:
    >>> a = [
    ... [1.2, 5.5, 6.2],
    ... [4.66, 12.3, -9.2]
    ... ]
    >>> b = [
    ... [5.0, 3.3],
    ... [-2.9, 4.4],
    ... [7.2, 4.4]
    ... ]
    >>> print(lazy_matrix_mul(a, b))
    [[ 34.69   55.44 ]
     [-78.61   29.018]]

Test 3:
    >>> print(lazy_matrix_mul(a))
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'b'

Test 4:
    >>> print(lazy_matrix_mul()) # doctest: +NORMALIZE_WHITESPACE
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 
    'a' and 'b'

Test 5:
    >>> a = [
    ... [1, 2],
    ... [3, 4],
    ... ]
    >>> b = [
    ... [1, 2],
    ... [2, 3],
    ... [4, 5]
    ... ]
    >>> print(lazy_matrix_mul(a, b))
    Traceback (most recent call last):
    ValueError: shapes (2,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0)


Test 6:
    >>> print(lazy_matrix_mul([[]], [[5, 6], [7, 8]]))
    Traceback (most recent call last):
    ValueError: shapes (1,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0)

Test 7:
    >>> print(lazy_matrix_mul([[5, 6], [7, 8]], [[]]))
    Traceback (most recent call last):
    ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

Test 8:
    >>> print(lazy_matrix_mul("not a list", [[1, 2]]))
    Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead

Test 9:
    >>> print(lazy_matrix_mul([[1, 2]], "also not a list"))
    Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead

Test 10:
    >>> print(lazy_matrix_mul("not a list", "also not a list"))
    Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead

Test 11:
    >>> print(lazy_matrix_mul(None, None))
    Traceback (most recent call last):
    TypeError: Object arrays are not currently supported

Test 12:
    >>> print(lazy_matrix_mul([1, 2], [[3, 4]]))
    Traceback (most recent call last):
    ValueError: shapes (2,) and (1,2) not aligned: 2 (dim 0) != 1 (dim 0)

Test 13:
    >>> print(lazy_matrix_mul([[1, 2]], [3, 4]))
    [11]

Test 15:
    >>> print(lazy_matrix_mul([1, 2], [3, 4]))
    11

Test 16:
    >>> print(lazy_matrix_mul([[1, "non-number"]], [[3, 4]]))
    Traceback (most recent call last):
    ValueError: shapes (1,2) and (1,2) not aligned: 2 (dim 1) != 1 (dim 0)

Test 17:
    >>> print(lazy_matrix_mul([[5, 6], [7, 8]], [[5, "6"], [7, 8]]))
    Traceback (most recent call last):
    TypeError: invalid data type for einsum

Test 19:
    >>> print(lazy_matrix_mul([[1, "non-number"]], [[{"a": 1}, 8.8]]))
    Traceback (most recent call last):
    TypeError: Object arrays are not currently supported

Test 20:
    >>> a = [
    ... [1, 2],
    ... [3, 4, 5]
    ... ]
    >>> b = [
    ... [1, 2],
    ... [3, 4]
    ... ]
    >>> print(lazy_matrix_mul(a, b))
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.

Test 21:
    >>> a = [
    ... [1, 2],
    ... [3, 4]
    ... ]
    >>> b = [
    ... [1, 2],
    ... [3, 4, 5]
    ... ]
    >>> print(lazy_matrix_mul(a, b))
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.

Test 22:
    >>> a = [
    ... [1, 2],
    ... [3, 4, 5]
    ... ]
    >>> b = a
    >>> print(lazy_matrix_mul(a, b))
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.
